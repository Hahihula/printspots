stages:
  - build
  - release

variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo
  RUST_BACKTRACE: "1"

# Cache configuration for faster builds
.cache_template: &cache_config
  cache:
    key: ${CI_COMMIT_REF_SLUG}-${CI_JOB_NAME}
    paths:
      - .cargo/
      - target/
      - gui/node_modules/
      - gui/src-tauri/target/

#############################################
# Linux Builds (Shared Runners)
#############################################

build:linux:cli:
  stage: build
  image: rust:latest
  <<: *cache_config
  script:
    - rustc --version && cargo --version
    - cargo build --release --package printspots-cli
    - mkdir -p artifacts/linux
    - cp target/release/printspots artifacts/linux/printspots-cli-linux-x86_64
  artifacts:
    paths:
      - artifacts/linux/
    expire_in: 1 week
  only:
    - main
    - tags

build:linux:gui:
  stage: build
  image: rust:latest
  <<: *cache_config
  before_script:
    # Install system dependencies for Tauri
    - apt-get update
    - apt-get install -y libwebkit2gtk-4.1-dev build-essential curl wget file libxdo-dev libssl-dev libayatana-appindicator3-dev librsvg2-dev
    # Install Node.js
    - curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
    - apt-get install -y nodejs
    - npm install -g yarn
  script:
    - rustc --version && cargo --version
    - node --version && yarn --version
    - cd gui
    - yarn install
    - yarn tauri build
    - cd ..
    - mkdir -p artifacts/linux
    - cp gui/src-tauri/target/release/bundle/deb/*.deb artifacts/linux/ || true
    - cp gui/src-tauri/target/release/bundle/appimage/*.AppImage artifacts/linux/ || true
    - cp gui/src-tauri/target/release/printspots artifacts/linux/printspots-gui-linux-x86_64 || true
  artifacts:
    paths:
      - artifacts/linux/
    expire_in: 1 week
  only:
    - main
    - tags

#############################################
# macOS Builds (Self-hosted Runner)
#############################################

build:macos:cli:
  stage: build
  tags:
    - macos
  <<: *cache_config
  script:
    - rustc --version && cargo --version
    - cargo build --release --package printspots-cli
    - mkdir -p artifacts/macos
    - cp target/release/printspots artifacts/macos/printspots-cli-macos-$(uname -m)
  artifacts:
    paths:
      - artifacts/macos/
    expire_in: 1 week
  only:
    - main
    - tags
  allow_failure: true

build:macos:gui:
  stage: build
  tags:
    - macos
  <<: *cache_config
  before_script:
    # Ensure yarn is available
    - command -v yarn || npm install -g yarn
  script:
    - rustc --version && cargo --version
    - node --version && yarn --version
    - cd gui
    - yarn install
    - yarn tauri build
    - cd ..
    - mkdir -p artifacts/macos
    - cp -r gui/src-tauri/target/release/bundle/dmg/*.dmg artifacts/macos/ || true
    - cp -r gui/src-tauri/target/release/bundle/macos/*.app artifacts/macos/ || true
  artifacts:
    paths:
      - artifacts/macos/
    expire_in: 1 week
  only:
    - main
    - tags
  allow_failure: true

#############################################
# Windows Builds (Self-hosted Runner)
#############################################

build:windows:cli:
  stage: build
  tags:
    - windows
  <<: *cache_config
  script:
    - rustc --version
    - cargo --version
    - cargo build --release --package printspots-cli
    - mkdir -p artifacts/windows
    - cp target/release/printspots.exe artifacts/windows/printspots-cli-windows-x86_64.exe
  artifacts:
    paths:
      - artifacts/windows/
    expire_in: 1 week
  only:
    - main
    - tags
  allow_failure: true

build:windows:gui:
  stage: build
  tags:
    - windows
  <<: *cache_config
  before_script:
    - node --version
    - yarn --version
  script:
    - rustc --version
    - cargo --version
    - cd gui
    - yarn install
    - yarn tauri build
    - cd ..
    - mkdir -p artifacts/windows
    - cp gui/src-tauri/target/release/bundle/msi/*.msi artifacts/windows/ 2>$null || echo "No MSI found"
    - cp gui/src-tauri/target/release/bundle/nsis/*.exe artifacts/windows/ 2>$null || echo "No NSIS installer found"
    - cp gui/src-tauri/target/release/printspots.exe artifacts/windows/printspots-gui-windows-x86_64.exe 2>$null || echo "No binary found"
  artifacts:
    paths:
      - artifacts/windows/
    expire_in: 1 week
  only:
    - main
    - tags
  allow_failure: true

#############################################
# Release Jobs (On Tags)
#############################################

release:crates-io:
  stage: release
  image: rust:latest
  script:
    - cargo login $CRATES_IO_TOKEN
    - cd crates/core
    - cargo publish
  only:
    - tags
  when: manual
  allow_failure: false

release:gitlab:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  dependencies:
    - build:linux:cli
    - build:linux:gui
    - build:macos:cli
    - build:macos:gui
    - build:windows:cli
    - build:windows:gui
  script:
    - echo "Creating GitLab release for $CI_COMMIT_TAG"
  release:
    tag_name: $CI_COMMIT_TAG
    description: 'Release $CI_COMMIT_TAG'
    assets:
      links:
        # Linux artifacts
        - name: 'Linux CLI (x86_64)'
          url: '${CI_PROJECT_URL}/-/jobs/${CI_JOB_ID}/artifacts/file/artifacts/linux/printspots-cli-linux-x86_64'
          filepath: '/artifacts/linux/printspots-cli-linux-x86_64'
        - name: 'Linux GUI AppImage'
          url: '${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/artifacts/linux/*.AppImage?job=build:linux:gui'
        - name: 'Linux GUI DEB'
          url: '${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/artifacts/linux/*.deb?job=build:linux:gui'
        # macOS artifacts
        - name: 'macOS CLI (Universal)'
          url: '${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/artifacts/macos/printspots-cli-macos-*?job=build:macos:cli'
        - name: 'macOS GUI DMG'
          url: '${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/artifacts/macos/*.dmg?job=build:macos:gui'
        # Windows artifacts
        - name: 'Windows CLI (x86_64)'
          url: '${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/artifacts/windows/printspots-cli-windows-x86_64.exe?job=build:windows:cli'
        - name: 'Windows GUI MSI Installer'
          url: '${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/artifacts/windows/*.msi?job=build:windows:gui'
        - name: 'Windows GUI NSIS Installer'
          url: '${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/artifacts/windows/*.exe?job=build:windows:gui'
  only:
    - tags